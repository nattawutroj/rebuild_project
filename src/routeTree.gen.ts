/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppTesttitleroomIndexImport } from './routes/_app/test_title_room/index'
import { Route as AppTesttitlereportsIndexImport } from './routes/_app/test_title_reports/index'
import { Route as AppTesttitlerecordIndexImport } from './routes/_app/test_title_record/index'
import { Route as AppTesttitlecandidateIndexImport } from './routes/_app/test_title_candidate/index'
import { Route as AppTestsixroomIndexImport } from './routes/_app/test_six_room/index'
import { Route as AppTestsixreportsIndexImport } from './routes/_app/test_six_reports/index'
import { Route as AppTestsixrecordIndexImport } from './routes/_app/test_six_record/index'
import { Route as AppTesthundredroomIndexImport } from './routes/_app/test_hundred_room/index'
import { Route as AppTesthundredreportsIndexImport } from './routes/_app/test_hundred_reports/index'
import { Route as AppTesthundredrecordIndexImport } from './routes/_app/test_hundred_record/index'
import { Route as AppTeacherIndexImport } from './routes/_app/teacher/index'
import { Route as AppSubjectsIndexImport } from './routes/_app/subjects/index'
import { Route as AppStudentgropsIndexImport } from './routes/_app/student_grops/index'
import { Route as AppStudentIndexImport } from './routes/_app/student/index'
import { Route as AppSemesterIndexImport } from './routes/_app/semester/index'
import { Route as AppRoomIndexImport } from './routes/_app/room/index'
import { Route as AppNewsIndexImport } from './routes/_app/news/index'
import { Route as AppNametitleIndexImport } from './routes/_app/name_title/index'
import { Route as AppDocapproveIndexImport } from './routes/_app/doc_approve/index'
import { Route as AppDissertationcompleteIndexImport } from './routes/_app/dissertation_complete/index'
import { Route as AppDashboardIndexImport } from './routes/_app/dashboard/index'
import { Route as AppCoursesIndexImport } from './routes/_app/courses/index'
import { Route as AppCaptainsIndexImport } from './routes/_app/captains/index'
import { Route as AppAllIndexImport } from './routes/_app/all/index'
import { Route as AppTestreportIdSelectReportImport } from './routes/_app/testreport.$id.$selectReport'
import { Route as AppTestreportIndexIdSelectReportImport } from './routes/_app/testreport/index.$id.$selectReport'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppTesttitleroomIndexRoute = AppTesttitleroomIndexImport.update({
  path: '/test_title_room/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_title_room/index.lazy').then((d) => d.Route),
)

const AppTesttitlereportsIndexRoute = AppTesttitlereportsIndexImport.update({
  path: '/test_title_reports/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_title_reports/index.lazy').then((d) => d.Route),
)

const AppTesttitlerecordIndexRoute = AppTesttitlerecordIndexImport.update({
  path: '/test_title_record/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_title_record/index.lazy').then((d) => d.Route),
)

const AppTesttitlecandidateIndexRoute = AppTesttitlecandidateIndexImport.update(
  {
    path: '/test_title_candidate/',
    getParentRoute: () => AppRoute,
  } as any,
).lazy(() =>
  import('./routes/_app/test_title_candidate/index.lazy').then((d) => d.Route),
)

const AppTestsixroomIndexRoute = AppTestsixroomIndexImport.update({
  path: '/test_six_room/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_six_room/index.lazy').then((d) => d.Route),
)

const AppTestsixreportsIndexRoute = AppTestsixreportsIndexImport.update({
  path: '/test_six_reports/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_six_reports/index.lazy').then((d) => d.Route),
)

const AppTestsixrecordIndexRoute = AppTestsixrecordIndexImport.update({
  path: '/test_six_record/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_six_record/index.lazy').then((d) => d.Route),
)

const AppTesthundredroomIndexRoute = AppTesthundredroomIndexImport.update({
  path: '/test_hundred_room/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_hundred_room/index.lazy').then((d) => d.Route),
)

const AppTesthundredreportsIndexRoute = AppTesthundredreportsIndexImport.update(
  {
    path: '/test_hundred_reports/',
    getParentRoute: () => AppRoute,
  } as any,
).lazy(() =>
  import('./routes/_app/test_hundred_reports/index.lazy').then((d) => d.Route),
)

const AppTesthundredrecordIndexRoute = AppTesthundredrecordIndexImport.update({
  path: '/test_hundred_record/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/test_hundred_record/index.lazy').then((d) => d.Route),
)

const AppTeacherIndexRoute = AppTeacherIndexImport.update({
  path: '/teacher/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/teacher/index.lazy').then((d) => d.Route),
)

const AppSubjectsIndexRoute = AppSubjectsIndexImport.update({
  path: '/subjects/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/subjects/index.lazy').then((d) => d.Route),
)

const AppStudentgropsIndexRoute = AppStudentgropsIndexImport.update({
  path: '/student_grops/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/student_grops/index.lazy').then((d) => d.Route),
)

const AppStudentIndexRoute = AppStudentIndexImport.update({
  path: '/student/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/student/index.lazy').then((d) => d.Route),
)

const AppSemesterIndexRoute = AppSemesterIndexImport.update({
  path: '/semester/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/semester/index.lazy').then((d) => d.Route),
)

const AppRoomIndexRoute = AppRoomIndexImport.update({
  path: '/room/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/room/index.lazy').then((d) => d.Route),
)

const AppNewsIndexRoute = AppNewsIndexImport.update({
  path: '/news/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/news/index.lazy').then((d) => d.Route),
)

const AppNametitleIndexRoute = AppNametitleIndexImport.update({
  path: '/name_title/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/name_title/index.lazy').then((d) => d.Route),
)

const AppDocapproveIndexRoute = AppDocapproveIndexImport.update({
  path: '/doc_approve/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/doc_approve/index.lazy').then((d) => d.Route),
)

const AppDissertationcompleteIndexRoute =
  AppDissertationcompleteIndexImport.update({
    path: '/dissertation_complete/',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/dissertation_complete/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AppDashboardIndexRoute = AppDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/dashboard/index.lazy').then((d) => d.Route),
)

const AppCoursesIndexRoute = AppCoursesIndexImport.update({
  path: '/courses/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/courses/index.lazy').then((d) => d.Route),
)

const AppCaptainsIndexRoute = AppCaptainsIndexImport.update({
  path: '/captains/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/captains/index.lazy').then((d) => d.Route),
)

const AppAllIndexRoute = AppAllIndexImport.update({
  path: '/all/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/all/index.lazy').then((d) => d.Route),
)

const AppTestreportIdSelectReportRoute =
  AppTestreportIdSelectReportImport.update({
    path: '/testreport/$id/$selectReport',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/testreport.$id.$selectReport.lazy').then(
      (d) => d.Route,
    ),
  )

const AppTestreportIndexIdSelectReportRoute =
  AppTestreportIndexIdSelectReportImport.update({
    path: '/testreport/index/$id/$selectReport',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/testreport/index.$id.$selectReport.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/all/': {
      preLoaderRoute: typeof AppAllIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/captains/': {
      preLoaderRoute: typeof AppCaptainsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/courses/': {
      preLoaderRoute: typeof AppCoursesIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/dashboard/': {
      preLoaderRoute: typeof AppDashboardIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/dissertation_complete/': {
      preLoaderRoute: typeof AppDissertationcompleteIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/doc_approve/': {
      preLoaderRoute: typeof AppDocapproveIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/name_title/': {
      preLoaderRoute: typeof AppNametitleIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/news/': {
      preLoaderRoute: typeof AppNewsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/room/': {
      preLoaderRoute: typeof AppRoomIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/semester/': {
      preLoaderRoute: typeof AppSemesterIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/student/': {
      preLoaderRoute: typeof AppStudentIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/student_grops/': {
      preLoaderRoute: typeof AppStudentgropsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/subjects/': {
      preLoaderRoute: typeof AppSubjectsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/teacher/': {
      preLoaderRoute: typeof AppTeacherIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_hundred_record/': {
      preLoaderRoute: typeof AppTesthundredrecordIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_hundred_reports/': {
      preLoaderRoute: typeof AppTesthundredreportsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_hundred_room/': {
      preLoaderRoute: typeof AppTesthundredroomIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_six_record/': {
      preLoaderRoute: typeof AppTestsixrecordIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_six_reports/': {
      preLoaderRoute: typeof AppTestsixreportsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_six_room/': {
      preLoaderRoute: typeof AppTestsixroomIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_title_candidate/': {
      preLoaderRoute: typeof AppTesttitlecandidateIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_title_record/': {
      preLoaderRoute: typeof AppTesttitlerecordIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_title_reports/': {
      preLoaderRoute: typeof AppTesttitlereportsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/test_title_room/': {
      preLoaderRoute: typeof AppTesttitleroomIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/testreport/$id/$selectReport': {
      preLoaderRoute: typeof AppTestreportIdSelectReportImport
      parentRoute: typeof AppImport
    }
    '/_app/testreport/index/$id/$selectReport': {
      preLoaderRoute: typeof AppTestreportIndexIdSelectReportImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AppRoute.addChildren([
    AppIndexRoute,
    AppAllIndexRoute,
    AppCaptainsIndexRoute,
    AppCoursesIndexRoute,
    AppDashboardIndexRoute,
    AppDissertationcompleteIndexRoute,
    AppDocapproveIndexRoute,
    AppNametitleIndexRoute,
    AppNewsIndexRoute,
    AppRoomIndexRoute,
    AppSemesterIndexRoute,
    AppStudentIndexRoute,
    AppStudentgropsIndexRoute,
    AppSubjectsIndexRoute,
    AppTeacherIndexRoute,
    AppTesthundredrecordIndexRoute,
    AppTesthundredreportsIndexRoute,
    AppTesthundredroomIndexRoute,
    AppTestsixrecordIndexRoute,
    AppTestsixreportsIndexRoute,
    AppTestsixroomIndexRoute,
    AppTesttitlecandidateIndexRoute,
    AppTesttitlerecordIndexRoute,
    AppTesttitlereportsIndexRoute,
    AppTesttitleroomIndexRoute,
    AppTestreportIdSelectReportRoute,
    AppTestreportIndexIdSelectReportRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
