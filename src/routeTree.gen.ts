/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as ScheduleImport } from './routes/schedule'
import { Route as LoginImport } from './routes/login'
import { Route as AllproImport } from './routes/allpro'
import { Route as StaffImport } from './routes/_staff'
import { Route as DashImport } from './routes/_dash'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as StaffStudentdashIndexImport } from './routes/_staff/student_dash/index'
import { Route as StaffStaffdashIndexImport } from './routes/_staff/staff_dash/index'
import { Route as DashTesttitleroomIndexImport } from './routes/_dash/test_title_room/index'
import { Route as DashTesttitlereportsIndexImport } from './routes/_dash/test_title_reports/index'
import { Route as DashTesttitlerecordIndexImport } from './routes/_dash/test_title_record/index'
import { Route as DashTesttitlecandidateIndexImport } from './routes/_dash/test_title_candidate/index'
import { Route as DashTestsixroomIndexImport } from './routes/_dash/test_six_room/index'
import { Route as DashTestsixreportsIndexImport } from './routes/_dash/test_six_reports/index'
import { Route as DashTestsixrecordIndexImport } from './routes/_dash/test_six_record/index'
import { Route as DashTesthundredroomIndexImport } from './routes/_dash/test_hundred_room/index'
import { Route as DashTesthundredreportsIndexImport } from './routes/_dash/test_hundred_reports/index'
import { Route as DashTesthundredrecordIndexImport } from './routes/_dash/test_hundred_record/index'
import { Route as DashTeacherIndexImport } from './routes/_dash/teacher/index'
import { Route as DashSubjectsIndexImport } from './routes/_dash/subjects/index'
import { Route as DashStudentgropsIndexImport } from './routes/_dash/student_grops/index'
import { Route as DashStudentIndexImport } from './routes/_dash/student/index'
import { Route as DashSemesterIndexImport } from './routes/_dash/semester/index'
import { Route as DashRoomIndexImport } from './routes/_dash/room/index'
import { Route as DashReportsIndexImport } from './routes/_dash/reports/index'
import { Route as DashNewsIndexImport } from './routes/_dash/news/index'
import { Route as DashNametitleIndexImport } from './routes/_dash/name_title/index'
import { Route as DashDocapproveIndexImport } from './routes/_dash/doc_approve/index'
import { Route as DashDissertationcompleteIndexImport } from './routes/_dash/dissertation_complete/index'
import { Route as DashDashboardIndexImport } from './routes/_dash/dashboard/index'
import { Route as DashCoursesIndexImport } from './routes/_dash/courses/index'
import { Route as DashCaptainsIndexImport } from './routes/_dash/captains/index'
import { Route as DashAllIndexImport } from './routes/_dash/all/index'
import { Route as TestreportIdSelectReportImport } from './routes/testreport.$id.$selectReport'
import { Route as DashTestreportIndexIdSelectReportImport } from './routes/_dash/testreport/index.$id.$selectReport'

// Create/Update Routes

const TestRoute = TestImport.update({
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const ScheduleRoute = ScheduleImport.update({
  path: '/schedule',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AllproRoute = AllproImport.update({
  path: '/allpro',
  getParentRoute: () => rootRoute,
} as any)

const StaffRoute = StaffImport.update({
  id: '/_staff',
  getParentRoute: () => rootRoute,
} as any)

const DashRoute = DashImport.update({
  id: '/_dash',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const StaffStudentdashIndexRoute = StaffStudentdashIndexImport.update({
  path: '/student_dash/',
  getParentRoute: () => StaffRoute,
} as any).lazy(() =>
  import('./routes/_staff/student_dash/index.lazy').then((d) => d.Route),
)

const StaffStaffdashIndexRoute = StaffStaffdashIndexImport.update({
  path: '/staff_dash/',
  getParentRoute: () => StaffRoute,
} as any).lazy(() =>
  import('./routes/_staff/staff_dash/index.lazy').then((d) => d.Route),
)

const DashTesttitleroomIndexRoute = DashTesttitleroomIndexImport.update({
  path: '/test_title_room/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_title_room/index.lazy').then((d) => d.Route),
)

const DashTesttitlereportsIndexRoute = DashTesttitlereportsIndexImport.update({
  path: '/test_title_reports/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_title_reports/index.lazy').then((d) => d.Route),
)

const DashTesttitlerecordIndexRoute = DashTesttitlerecordIndexImport.update({
  path: '/test_title_record/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_title_record/index.lazy').then((d) => d.Route),
)

const DashTesttitlecandidateIndexRoute =
  DashTesttitlecandidateIndexImport.update({
    path: '/test_title_candidate/',
    getParentRoute: () => DashRoute,
  } as any).lazy(() =>
    import('./routes/_dash/test_title_candidate/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DashTestsixroomIndexRoute = DashTestsixroomIndexImport.update({
  path: '/test_six_room/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_six_room/index.lazy').then((d) => d.Route),
)

const DashTestsixreportsIndexRoute = DashTestsixreportsIndexImport.update({
  path: '/test_six_reports/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_six_reports/index.lazy').then((d) => d.Route),
)

const DashTestsixrecordIndexRoute = DashTestsixrecordIndexImport.update({
  path: '/test_six_record/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_six_record/index.lazy').then((d) => d.Route),
)

const DashTesthundredroomIndexRoute = DashTesthundredroomIndexImport.update({
  path: '/test_hundred_room/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/test_hundred_room/index.lazy').then((d) => d.Route),
)

const DashTesthundredreportsIndexRoute =
  DashTesthundredreportsIndexImport.update({
    path: '/test_hundred_reports/',
    getParentRoute: () => DashRoute,
  } as any).lazy(() =>
    import('./routes/_dash/test_hundred_reports/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DashTesthundredrecordIndexRoute = DashTesthundredrecordIndexImport.update(
  {
    path: '/test_hundred_record/',
    getParentRoute: () => DashRoute,
  } as any,
).lazy(() =>
  import('./routes/_dash/test_hundred_record/index.lazy').then((d) => d.Route),
)

const DashTeacherIndexRoute = DashTeacherIndexImport.update({
  path: '/teacher/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/teacher/index.lazy').then((d) => d.Route),
)

const DashSubjectsIndexRoute = DashSubjectsIndexImport.update({
  path: '/subjects/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/subjects/index.lazy').then((d) => d.Route),
)

const DashStudentgropsIndexRoute = DashStudentgropsIndexImport.update({
  path: '/student_grops/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/student_grops/index.lazy').then((d) => d.Route),
)

const DashStudentIndexRoute = DashStudentIndexImport.update({
  path: '/student/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/student/index.lazy').then((d) => d.Route),
)

const DashSemesterIndexRoute = DashSemesterIndexImport.update({
  path: '/semester/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/semester/index.lazy').then((d) => d.Route),
)

const DashRoomIndexRoute = DashRoomIndexImport.update({
  path: '/room/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/room/index.lazy').then((d) => d.Route),
)

const DashReportsIndexRoute = DashReportsIndexImport.update({
  path: '/reports/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/reports/index.lazy').then((d) => d.Route),
)

const DashNewsIndexRoute = DashNewsIndexImport.update({
  path: '/news/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/news/index.lazy').then((d) => d.Route),
)

const DashNametitleIndexRoute = DashNametitleIndexImport.update({
  path: '/name_title/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/name_title/index.lazy').then((d) => d.Route),
)

const DashDocapproveIndexRoute = DashDocapproveIndexImport.update({
  path: '/doc_approve/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/doc_approve/index.lazy').then((d) => d.Route),
)

const DashDissertationcompleteIndexRoute =
  DashDissertationcompleteIndexImport.update({
    path: '/dissertation_complete/',
    getParentRoute: () => DashRoute,
  } as any).lazy(() =>
    import('./routes/_dash/dissertation_complete/index.lazy').then(
      (d) => d.Route,
    ),
  )

const DashDashboardIndexRoute = DashDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/dashboard/index.lazy').then((d) => d.Route),
)

const DashCoursesIndexRoute = DashCoursesIndexImport.update({
  path: '/courses/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/courses/index.lazy').then((d) => d.Route),
)

const DashCaptainsIndexRoute = DashCaptainsIndexImport.update({
  path: '/captains/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/captains/index.lazy').then((d) => d.Route),
)

const DashAllIndexRoute = DashAllIndexImport.update({
  path: '/all/',
  getParentRoute: () => DashRoute,
} as any).lazy(() =>
  import('./routes/_dash/all/index.lazy').then((d) => d.Route),
)

const TestreportIdSelectReportRoute = TestreportIdSelectReportImport.update({
  path: '/testreport/$id/$selectReport',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/testreport.$id.$selectReport.lazy').then((d) => d.Route),
)

const DashTestreportIndexIdSelectReportRoute =
  DashTestreportIndexIdSelectReportImport.update({
    path: '/testreport/index/$id/$selectReport',
    getParentRoute: () => DashRoute,
  } as any).lazy(() =>
    import('./routes/_dash/testreport/index.$id.$selectReport.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_dash': {
      preLoaderRoute: typeof DashImport
      parentRoute: typeof rootRoute
    }
    '/_staff': {
      preLoaderRoute: typeof StaffImport
      parentRoute: typeof rootRoute
    }
    '/allpro': {
      preLoaderRoute: typeof AllproImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/schedule': {
      preLoaderRoute: typeof ScheduleImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/testreport/$id/$selectReport': {
      preLoaderRoute: typeof TestreportIdSelectReportImport
      parentRoute: typeof rootRoute
    }
    '/_dash/all/': {
      preLoaderRoute: typeof DashAllIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/captains/': {
      preLoaderRoute: typeof DashCaptainsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/courses/': {
      preLoaderRoute: typeof DashCoursesIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/dashboard/': {
      preLoaderRoute: typeof DashDashboardIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/dissertation_complete/': {
      preLoaderRoute: typeof DashDissertationcompleteIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/doc_approve/': {
      preLoaderRoute: typeof DashDocapproveIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/name_title/': {
      preLoaderRoute: typeof DashNametitleIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/news/': {
      preLoaderRoute: typeof DashNewsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/reports/': {
      preLoaderRoute: typeof DashReportsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/room/': {
      preLoaderRoute: typeof DashRoomIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/semester/': {
      preLoaderRoute: typeof DashSemesterIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/student/': {
      preLoaderRoute: typeof DashStudentIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/student_grops/': {
      preLoaderRoute: typeof DashStudentgropsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/subjects/': {
      preLoaderRoute: typeof DashSubjectsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/teacher/': {
      preLoaderRoute: typeof DashTeacherIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_hundred_record/': {
      preLoaderRoute: typeof DashTesthundredrecordIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_hundred_reports/': {
      preLoaderRoute: typeof DashTesthundredreportsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_hundred_room/': {
      preLoaderRoute: typeof DashTesthundredroomIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_six_record/': {
      preLoaderRoute: typeof DashTestsixrecordIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_six_reports/': {
      preLoaderRoute: typeof DashTestsixreportsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_six_room/': {
      preLoaderRoute: typeof DashTestsixroomIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_title_candidate/': {
      preLoaderRoute: typeof DashTesttitlecandidateIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_title_record/': {
      preLoaderRoute: typeof DashTesttitlerecordIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_title_reports/': {
      preLoaderRoute: typeof DashTesttitlereportsIndexImport
      parentRoute: typeof DashImport
    }
    '/_dash/test_title_room/': {
      preLoaderRoute: typeof DashTesttitleroomIndexImport
      parentRoute: typeof DashImport
    }
    '/_staff/staff_dash/': {
      preLoaderRoute: typeof StaffStaffdashIndexImport
      parentRoute: typeof StaffImport
    }
    '/_staff/student_dash/': {
      preLoaderRoute: typeof StaffStudentdashIndexImport
      parentRoute: typeof StaffImport
    }
    '/_dash/testreport/index/$id/$selectReport': {
      preLoaderRoute: typeof DashTestreportIndexIdSelectReportImport
      parentRoute: typeof DashImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AppRoute.addChildren([AppIndexRoute]),
  DashRoute.addChildren([
    DashAllIndexRoute,
    DashCaptainsIndexRoute,
    DashCoursesIndexRoute,
    DashDashboardIndexRoute,
    DashDissertationcompleteIndexRoute,
    DashDocapproveIndexRoute,
    DashNametitleIndexRoute,
    DashNewsIndexRoute,
    DashReportsIndexRoute,
    DashRoomIndexRoute,
    DashSemesterIndexRoute,
    DashStudentIndexRoute,
    DashStudentgropsIndexRoute,
    DashSubjectsIndexRoute,
    DashTeacherIndexRoute,
    DashTesthundredrecordIndexRoute,
    DashTesthundredreportsIndexRoute,
    DashTesthundredroomIndexRoute,
    DashTestsixrecordIndexRoute,
    DashTestsixreportsIndexRoute,
    DashTestsixroomIndexRoute,
    DashTesttitlecandidateIndexRoute,
    DashTesttitlerecordIndexRoute,
    DashTesttitlereportsIndexRoute,
    DashTesttitleroomIndexRoute,
    DashTestreportIndexIdSelectReportRoute,
  ]),
  StaffRoute.addChildren([
    StaffStaffdashIndexRoute,
    StaffStudentdashIndexRoute,
  ]),
  AllproRoute,
  LoginRoute,
  ScheduleRoute,
  TestRoute,
  TestreportIdSelectReportRoute,
])

/* prettier-ignore-end */
